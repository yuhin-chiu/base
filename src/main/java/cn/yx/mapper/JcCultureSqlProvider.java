package cn.yx.mapper;

import cn.yx.entity.JcCultureExample.Criteria;
import cn.yx.entity.JcCultureExample.Criterion;
import cn.yx.entity.JcCultureExample;
import cn.yx.entity.JcCultureWithBLOBs;
import java.util.List;
import org.apache.ibatis.jdbc.SQL;
import cn.yx.entity.JcCulture;

public class JcCultureSqlProvider {

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table jc_culture
     * @mbg.generated  Mon Nov 06 20:28:45 CST 2017
     */
    public String insertSelective(JcCulture record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("jc_culture");
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        if (record.getParent() != null) {
            sql.VALUES("parent", "#{parent,jdbcType=INTEGER}");
        }
        if (record.getTitle() != null) {
            sql.VALUES("title", "#{title,jdbcType=VARCHAR}");
        }
        if (record.getImgKey() != null) {
            sql.VALUES("img_key", "#{imgKey,jdbcType=VARCHAR}");
        }
        if (record.getImgKey1() != null) {
            sql.VALUES("img_key1", "#{imgKey1,jdbcType=VARCHAR}");
        }
        if (record.getImgKey2() != null) {
            sql.VALUES("img_key2", "#{imgKey2,jdbcType=VARCHAR}");
        }
        if (record.getImgKey3() != null) {
            sql.VALUES("img_key3", "#{imgKey3,jdbcType=VARCHAR}");
        }
        if (record.getContent() != null) {
            sql.VALUES("content", "#{content,jdbcType=VARCHAR}");
        }
        if (record.getContent1() != null) {
            sql.VALUES("content1", "#{content1,jdbcType=VARCHAR}");
        }
        if (record.getContent2() != null) {
            sql.VALUES("content2", "#{content2,jdbcType=VARCHAR}");
        }
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getLang() != null) {
            sql.VALUES("lang", "#{lang,jdbcType=INTEGER}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table jc_culture
     * @mbg.generated  Mon Nov 06 20:28:45 CST 2017
     */
    public String selectByExample(JcCultureExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("parent");
        sql.SELECT("title");
        sql.SELECT("img_key");
        sql.SELECT("img_key1");
        sql.SELECT("img_key2");
        sql.SELECT("img_key3");
        sql.SELECT("content");
        sql.SELECT("content1");
        sql.SELECT("content2");
        sql.SELECT("status");
        sql.SELECT("create_time");
        sql.SELECT("lang");
        sql.FROM("jc_culture");
        applyWhere(sql, example, false);
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table jc_culture
     * @mbg.generated  Mon Nov 06 20:28:45 CST 2017
     */
    public String updateByPrimaryKeySelective(JcCulture record) {
        SQL sql = new SQL();
        sql.UPDATE("jc_culture");
        if (record.getParent() != null) {
            sql.SET("parent = #{parent,jdbcType=INTEGER}");
        }
        if (record.getTitle() != null) {
            sql.SET("title = #{title,jdbcType=VARCHAR}");
        }
        if (record.getImgKey() != null) {
            sql.SET("img_key = #{imgKey,jdbcType=VARCHAR}");
        }
        if (record.getImgKey1() != null) {
            sql.SET("img_key1 = #{imgKey1,jdbcType=VARCHAR}");
        }
        if (record.getImgKey2() != null) {
            sql.SET("img_key2 = #{imgKey2,jdbcType=VARCHAR}");
        }
        if (record.getImgKey3() != null) {
            sql.SET("img_key3 = #{imgKey3,jdbcType=VARCHAR}");
        }
        if (record.getContent() != null) {
            sql.SET("content = #{content,jdbcType=VARCHAR}");
        }
        if (record.getContent1() != null) {
            sql.SET("content1 = #{content1,jdbcType=VARCHAR}");
        }
        if (record.getContent2() != null) {
            sql.SET("content2 = #{content2,jdbcType=VARCHAR}");
        }
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getLang() != null) {
            sql.SET("lang = #{lang,jdbcType=INTEGER}");
        }
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table jc_culture
     * @mbg.generated  Mon Nov 06 20:28:45 CST 2017
     */
    protected void applyWhere(SQL sql, JcCultureExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
                                    criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
                                    criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}